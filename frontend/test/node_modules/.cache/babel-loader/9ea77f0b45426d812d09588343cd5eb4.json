{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n\n    if (tokenString) {\n      const token = checkTokenValidity(userToken);\n\n      if (token) {\n        return token;\n      }\n    }\n\n    const userToken = JSON.parse(tokenString);\n    if (userToken) return;\n    return false;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', userToken);\n    setToken(userToken);\n  };\n\n  async function checkTokenValidity(userToken) {\n    const data = await fetch('http://localhost:3080/token', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        token: JSON.stringify(userToken)\n      }\n    }).then(data => data.json);\n    console.log(data);\n\n    if (data.valid) {\n      return userToken;\n    } else return false;\n  }\n\n  return {\n    setToken: saveToken,\n    token\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["/home/jan/git/car-auction-game/frontend/test/src/Functions/useToken.js"],"names":["useState","useToken","getToken","tokenString","localStorage","getItem","token","checkTokenValidity","userToken","JSON","parse","setToken","saveToken","setItem","data","fetch","method","headers","body","stringify","then","json","console","log","valid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;;AACA,QAAGF,WAAH,EAAgB;AACd,YAAMG,KAAK,GAAGC,kBAAkB,CAACC,SAAD,CAAhC;;AACA,UAAGF,KAAH,EAAU;AACR,eAAOA,KAAP;AACD;AACF;;AACD,UAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWP,WAAX,CAAlB;AACA,QAAGK,SAAH,EAAc;AACd,WAAO,KAAP;AACD,GAXD;;AAaA,QAAM,CAACF,KAAD,EAAQK,QAAR,IAAoBX,QAAQ,CAACE,QAAQ,EAAT,CAAlC;;AAEA,QAAMU,SAAS,GAAGJ,SAAS,IAAI;AAC7BJ,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BL,SAA9B;AACAG,IAAAA,QAAQ,CAACH,SAAD,CAAR;AACD,GAHD;;AAKA,iBAAeD,kBAAf,CAAkCC,SAAlC,EAA6C;AAC3C,UAAMM,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACpDC,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2C;AAKpDC,MAAAA,IAAI,EAAE;AAACZ,QAAAA,KAAK,EAAEG,IAAI,CAACU,SAAL,CAAeX,SAAf;AAAR;AAL8C,KAAhC,CAAL,CAMhBY,IANgB,CAMXN,IAAI,IAAIA,IAAI,CAACO,IANF,CAAnB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;;AAEA,QAAGA,IAAI,CAACU,KAAR,EAAe;AACX,aAAOhB,SAAP;AACH,KAFD,MAGK,OAAO,KAAP;AACN;;AAED,SAAO;AACLG,IAAAA,QAAQ,EAAEC,SADL;AAELN,IAAAA;AAFK,GAAP;AAID;;GAzCuBL,Q","sourcesContent":["import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    if(tokenString) {\n      const token = checkTokenValidity(userToken)\n      if(token) {\n        return token\n      }\n    }\n    const userToken = JSON.parse(tokenString);\n    if(userToken) return \n    return false\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', userToken);\n    setToken(userToken);\n  };\n\n  async function checkTokenValidity(userToken) {\n    const data = await fetch('http://localhost:3080/token', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: {token: JSON.stringify(userToken)}\n    }).then(data => data.json)\n    console.log(data)\n\n    if(data.valid) {\n        return userToken\n    }\n    else return false\n  }\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}"]},"metadata":{},"sourceType":"module"}