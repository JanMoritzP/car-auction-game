{"ast":null,"code":"var _jsxFileName = \"/home/jan/git/car-auction-game/frontend/test/src/Components/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './css/Inventory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inventory() {\n  _s();\n\n  const [cars, setCars] = useState([]);\n  const [parts, setParts] = useState([]);\n  const [misc, setMisc] = useState([]);\n  const [showPartsInCars, setShowPartsInCars] = useState(false);\n  const [option, setOption] = useState(\"cars\");\n  useEffect(() => {\n    fetch(\"http://localhost:3080/getInventory\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: localStorage.getItem(\"token\"),\n        option: option\n      })\n    }).then(res => res.json()).then(data => {\n      if (option === \"cars\") {\n        setCars(data.data);\n        console.log(data.data);\n      } else if (option === \"parts\") {\n        setParts(data.data);\n        console.log(data.data);\n      } else if (option === \"misc\") {\n        setMisc(data.data);\n      }\n    });\n  }, [option]);\n\n  function getInventory() {\n    if (option === \"cars\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cars.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: car.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: car.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: car.rarity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (option === \"parts\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: false,\n          onChange: e => setShowPartsInCars(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Also show parts used in cars?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), parts.map(part => {\n          if (part.usedIn === null || showPartsInCars) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: part.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: part.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: part.rarity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this);\n          }\n\n          return null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (option === \"misc\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: misc.map(misc => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Misc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"inventoryHeader\",\n      children: \"Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOption(\"cars\"),\n      children: \"Cars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOption(\"parts\"),\n      children: \"Parts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOption(\"misc\"),\n      children: \"Misc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Inventory, \"PtvPSgmZ+ovOz9dG1cH0DkwkI5w=\");\n\n_c = Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/home/jan/git/car-auction-game/frontend/test/src/Components/Inventory.js"],"names":["React","useEffect","useState","Inventory","cars","setCars","parts","setParts","misc","setMisc","showPartsInCars","setShowPartsInCars","option","setOption","fetch","method","headers","body","JSON","stringify","token","localStorage","getItem","then","res","json","data","console","log","getInventory","map","car","name","price","rarity","e","target","checked","part","usedIn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './css/Inventory.css'\n\nexport default function Inventory() {\n\n    const [cars, setCars] = useState([]);\n    const [parts, setParts] = useState([]);\n    const [misc, setMisc] = useState([])\n    const [showPartsInCars, setShowPartsInCars] = useState(false);\n    const [option, setOption] = useState(\"cars\")\n\n    useEffect(() => {\n        fetch(\"http://localhost:3080/getInventory\",  {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                token: localStorage.getItem(\"token\"),\n                option: option\n            })\n        })\n        .then(res => res.json())\n        .then(data => {\n            if(option === \"cars\") {\n                setCars(data.data)\n                console.log(data.data)\n            }\n            else if(option === \"parts\") {\n                setParts(data.data)\n                console.log(data.data)\n            }\n            else if(option === \"misc\") {\n                setMisc(data.data)\n            }\n        })\n    }, [option]);\n\n\n    function getInventory() {\n        if(option === \"cars\") {\n            return (\n                <div>\n                    {cars.map(car => \n                        <div>\n                            <p>{car.name}</p>\n                            <p>{car.price}</p>\n                            <p>{car.rarity}</p>\n                        </div>\n                        )}\n                </div>\n            )\n        }\n\n        if(option === \"parts\") {\n            return (\n                <div>\n                    <input type=\"checkbox\" checked={false} onChange={e => setShowPartsInCars(e.target.checked)}/>\n                    <label>Also show parts used in cars?</label>\n                    {parts.map(part => {\n                        if(part.usedIn === null || showPartsInCars) {\n                            return(\n                                <div>\n                                    <p>{part.name}</p>\n                                    <p>{part.price}</p>\n                                    <p>{part.rarity}</p>                            \n                                </div>\n                            )\n                        }\n                        return null\n                    })}\n                </div>\n            )\n        }\n    \n        if(option === \"misc\") {\n            return (\n                <div>\n                    {misc.map(misc => \n                        <div>\n                            <p>Misc</p>\n                        </div>\n                    )}\n                </div>\n            )\n        }\n\n    }\n\n\n    return(\n        <div>\n            <h2 class=\"inventoryHeader\">Inventory</h2>\n            <button onClick={() => setOption(\"cars\")}>Cars</button>\n            <button onClick={() => setOption(\"parts\")}>Parts</button>\n            <button onClick={() => setOption(\"misc\")}>Misc</button>\n        </div>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}