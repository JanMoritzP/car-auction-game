{"ast":null,"code":"var _jsxFileName = \"/home/jan/git/car-auction-game/frontend/test/src/Components/ModifyCar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModifyCar() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [parts, setParts] = useState([]);\n  const [car, setCar] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3080/getCarInfo', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        token: localStorage.getItem(\"token\"),\n        id: id\n      }\n    }).then(res => {\n      if (res.status !== 200) console.log(res.message);else {\n        setCar(res.car);\n        setParts(res.parts);\n      }\n    });\n  }, [id]);\n\n  function handleSave() {\n    fetch('http://localhost:3080/setCarInfo', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        token: localStorage.getItem(\"token\"),\n        car: car,\n        parts: parts\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"modifyCarHeader\",\n      children: \"Modify a Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModifyCar, \"sbEnchtvqnooukgJFXPHNgvphIc=\", false, function () {\n  return [useParams];\n});\n\n_c = ModifyCar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifyCar\");","map":{"version":3,"sources":["/home/jan/git/car-auction-game/frontend/test/src/Components/ModifyCar.js"],"names":["React","useEffect","useState","useParams","ModifyCar","id","parts","setParts","car","setCar","fetch","method","headers","body","token","localStorage","getItem","then","res","status","console","log","message","handleSave"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF6B;AAKtCC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADL;AAEFX,QAAAA,EAAE,EAAEA;AAFF;AALgC,KAArC,CAAL,CASGY,IATH,CASQC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuBC,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB,EAAvB,KACK;AACDb,QAAAA,MAAM,CAACS,GAAG,CAACV,GAAL,CAAN;AACAD,QAAAA,QAAQ,CAACW,GAAG,CAACZ,KAAL,CAAR;AACH;AACJ,KAfD;AAgBH,GAjBQ,EAiBN,CAACD,EAAD,CAjBM,CAAT;;AAmBA,WAASkB,UAAT,GAAsB;AAClBb,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF6B;AAKtCC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADL;AAEFR,QAAAA,GAAG,EAAEA,GAFH;AAGFF,QAAAA,KAAK,EAAEA;AAHL;AALgC,KAArC,CAAL;AAWH;;AAED,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAC,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEiB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA7CuBnB,S;UAELD,S;;;KAFKC,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\n\nexport default function ModifyCar() {\n\n    const { id } = useParams()\n    const [parts, setParts] = useState([])\n    const [car, setCar] = useState(null)\n\n    useEffect(() => {\n        fetch('http://localhost:3080/getCarInfo', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                token: localStorage.getItem(\"token\"),\n                id: id\n            }\n        }).then(res => {\n            if(res.status !== 200) console.log(res.message)\n            else {\n                setCar(res.car)\n                setParts(res.parts)\n            }\n        })\n    }, [id])\n\n    function handleSave() {\n        fetch('http://localhost:3080/setCarInfo', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                token: localStorage.getItem(\"token\"),\n                car: car,\n                parts: parts\n            }\n        })\n    }\n\n    return(\n        <div>\n            <h2 class=\"modifyCarHeader\">Modify a Car</h2>\n            <button onClick={handleSave}></button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}